// source: proto/areaService.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var proto_area_pb = require('../proto/area_pb.js');
goog.object.extend(proto, proto_area_pb);
goog.exportSymbol('proto.pj.sakuchin.percussion.proto.AddAreaRequest', null, global);
goog.exportSymbol('proto.pj.sakuchin.percussion.proto.AddAreaResponse', null, global);
goog.exportSymbol('proto.pj.sakuchin.percussion.proto.GetAreaCityResponse', null, global);
goog.exportSymbol('proto.pj.sakuchin.percussion.proto.GetAreaResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pj.sakuchin.percussion.proto.AddAreaRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pj.sakuchin.percussion.proto.AddAreaRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pj.sakuchin.percussion.proto.AddAreaRequest.displayName = 'proto.pj.sakuchin.percussion.proto.AddAreaRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pj.sakuchin.percussion.proto.AddAreaResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pj.sakuchin.percussion.proto.AddAreaResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pj.sakuchin.percussion.proto.AddAreaResponse.displayName = 'proto.pj.sakuchin.percussion.proto.AddAreaResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pj.sakuchin.percussion.proto.GetAreaResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pj.sakuchin.percussion.proto.GetAreaResponse.repeatedFields_, null);
};
goog.inherits(proto.pj.sakuchin.percussion.proto.GetAreaResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pj.sakuchin.percussion.proto.GetAreaResponse.displayName = 'proto.pj.sakuchin.percussion.proto.GetAreaResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pj.sakuchin.percussion.proto.GetAreaCityResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pj.sakuchin.percussion.proto.GetAreaCityResponse.repeatedFields_, null);
};
goog.inherits(proto.pj.sakuchin.percussion.proto.GetAreaCityResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pj.sakuchin.percussion.proto.GetAreaCityResponse.displayName = 'proto.pj.sakuchin.percussion.proto.GetAreaCityResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pj.sakuchin.percussion.proto.AddAreaRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pj.sakuchin.percussion.proto.AddAreaRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pj.sakuchin.percussion.proto.AddAreaRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pj.sakuchin.percussion.proto.AddAreaRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    areaname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    prefecture: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pj.sakuchin.percussion.proto.AddAreaRequest}
 */
proto.pj.sakuchin.percussion.proto.AddAreaRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pj.sakuchin.percussion.proto.AddAreaRequest;
  return proto.pj.sakuchin.percussion.proto.AddAreaRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pj.sakuchin.percussion.proto.AddAreaRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pj.sakuchin.percussion.proto.AddAreaRequest}
 */
proto.pj.sakuchin.percussion.proto.AddAreaRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAreaname(value);
      break;
    case 2:
      var value = /** @type {!proto.pj.sakuchin.percussion.proto.Prefecture} */ (reader.readEnum());
      msg.setPrefecture(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pj.sakuchin.percussion.proto.AddAreaRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pj.sakuchin.percussion.proto.AddAreaRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pj.sakuchin.percussion.proto.AddAreaRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pj.sakuchin.percussion.proto.AddAreaRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAreaname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPrefecture();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string areaName = 1;
 * @return {string}
 */
proto.pj.sakuchin.percussion.proto.AddAreaRequest.prototype.getAreaname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pj.sakuchin.percussion.proto.AddAreaRequest} returns this
 */
proto.pj.sakuchin.percussion.proto.AddAreaRequest.prototype.setAreaname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Prefecture prefecture = 2;
 * @return {!proto.pj.sakuchin.percussion.proto.Prefecture}
 */
proto.pj.sakuchin.percussion.proto.AddAreaRequest.prototype.getPrefecture = function() {
  return /** @type {!proto.pj.sakuchin.percussion.proto.Prefecture} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.pj.sakuchin.percussion.proto.Prefecture} value
 * @return {!proto.pj.sakuchin.percussion.proto.AddAreaRequest} returns this
 */
proto.pj.sakuchin.percussion.proto.AddAreaRequest.prototype.setPrefecture = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pj.sakuchin.percussion.proto.AddAreaResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pj.sakuchin.percussion.proto.AddAreaResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pj.sakuchin.percussion.proto.AddAreaResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pj.sakuchin.percussion.proto.AddAreaResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    area: (f = msg.getArea()) && proto_area_pb.Area.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pj.sakuchin.percussion.proto.AddAreaResponse}
 */
proto.pj.sakuchin.percussion.proto.AddAreaResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pj.sakuchin.percussion.proto.AddAreaResponse;
  return proto.pj.sakuchin.percussion.proto.AddAreaResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pj.sakuchin.percussion.proto.AddAreaResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pj.sakuchin.percussion.proto.AddAreaResponse}
 */
proto.pj.sakuchin.percussion.proto.AddAreaResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_area_pb.Area;
      reader.readMessage(value,proto_area_pb.Area.deserializeBinaryFromReader);
      msg.setArea(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pj.sakuchin.percussion.proto.AddAreaResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pj.sakuchin.percussion.proto.AddAreaResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pj.sakuchin.percussion.proto.AddAreaResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pj.sakuchin.percussion.proto.AddAreaResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getArea();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_area_pb.Area.serializeBinaryToWriter
    );
  }
};


/**
 * optional Area area = 1;
 * @return {?proto.pj.sakuchin.percussion.proto.Area}
 */
proto.pj.sakuchin.percussion.proto.AddAreaResponse.prototype.getArea = function() {
  return /** @type{?proto.pj.sakuchin.percussion.proto.Area} */ (
    jspb.Message.getWrapperField(this, proto_area_pb.Area, 1));
};


/**
 * @param {?proto.pj.sakuchin.percussion.proto.Area|undefined} value
 * @return {!proto.pj.sakuchin.percussion.proto.AddAreaResponse} returns this
*/
proto.pj.sakuchin.percussion.proto.AddAreaResponse.prototype.setArea = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pj.sakuchin.percussion.proto.AddAreaResponse} returns this
 */
proto.pj.sakuchin.percussion.proto.AddAreaResponse.prototype.clearArea = function() {
  return this.setArea(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pj.sakuchin.percussion.proto.AddAreaResponse.prototype.hasArea = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pj.sakuchin.percussion.proto.GetAreaResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pj.sakuchin.percussion.proto.GetAreaResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pj.sakuchin.percussion.proto.GetAreaResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pj.sakuchin.percussion.proto.GetAreaResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pj.sakuchin.percussion.proto.GetAreaResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    areasList: jspb.Message.toObjectList(msg.getAreasList(),
    proto_area_pb.Area.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pj.sakuchin.percussion.proto.GetAreaResponse}
 */
proto.pj.sakuchin.percussion.proto.GetAreaResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pj.sakuchin.percussion.proto.GetAreaResponse;
  return proto.pj.sakuchin.percussion.proto.GetAreaResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pj.sakuchin.percussion.proto.GetAreaResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pj.sakuchin.percussion.proto.GetAreaResponse}
 */
proto.pj.sakuchin.percussion.proto.GetAreaResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_area_pb.Area;
      reader.readMessage(value,proto_area_pb.Area.deserializeBinaryFromReader);
      msg.addAreas(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pj.sakuchin.percussion.proto.GetAreaResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pj.sakuchin.percussion.proto.GetAreaResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pj.sakuchin.percussion.proto.GetAreaResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pj.sakuchin.percussion.proto.GetAreaResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAreasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto_area_pb.Area.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Area areas = 1;
 * @return {!Array<!proto.pj.sakuchin.percussion.proto.Area>}
 */
proto.pj.sakuchin.percussion.proto.GetAreaResponse.prototype.getAreasList = function() {
  return /** @type{!Array<!proto.pj.sakuchin.percussion.proto.Area>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_area_pb.Area, 1));
};


/**
 * @param {!Array<!proto.pj.sakuchin.percussion.proto.Area>} value
 * @return {!proto.pj.sakuchin.percussion.proto.GetAreaResponse} returns this
*/
proto.pj.sakuchin.percussion.proto.GetAreaResponse.prototype.setAreasList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pj.sakuchin.percussion.proto.Area=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pj.sakuchin.percussion.proto.Area}
 */
proto.pj.sakuchin.percussion.proto.GetAreaResponse.prototype.addAreas = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pj.sakuchin.percussion.proto.Area, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pj.sakuchin.percussion.proto.GetAreaResponse} returns this
 */
proto.pj.sakuchin.percussion.proto.GetAreaResponse.prototype.clearAreasList = function() {
  return this.setAreasList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pj.sakuchin.percussion.proto.GetAreaCityResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pj.sakuchin.percussion.proto.GetAreaCityResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pj.sakuchin.percussion.proto.GetAreaCityResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pj.sakuchin.percussion.proto.GetAreaCityResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pj.sakuchin.percussion.proto.GetAreaCityResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    citiesList: jspb.Message.toObjectList(msg.getCitiesList(),
    proto_area_pb.City.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pj.sakuchin.percussion.proto.GetAreaCityResponse}
 */
proto.pj.sakuchin.percussion.proto.GetAreaCityResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pj.sakuchin.percussion.proto.GetAreaCityResponse;
  return proto.pj.sakuchin.percussion.proto.GetAreaCityResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pj.sakuchin.percussion.proto.GetAreaCityResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pj.sakuchin.percussion.proto.GetAreaCityResponse}
 */
proto.pj.sakuchin.percussion.proto.GetAreaCityResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_area_pb.City;
      reader.readMessage(value,proto_area_pb.City.deserializeBinaryFromReader);
      msg.addCities(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pj.sakuchin.percussion.proto.GetAreaCityResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pj.sakuchin.percussion.proto.GetAreaCityResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pj.sakuchin.percussion.proto.GetAreaCityResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pj.sakuchin.percussion.proto.GetAreaCityResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto_area_pb.City.serializeBinaryToWriter
    );
  }
};


/**
 * repeated City cities = 1;
 * @return {!Array<!proto.pj.sakuchin.percussion.proto.City>}
 */
proto.pj.sakuchin.percussion.proto.GetAreaCityResponse.prototype.getCitiesList = function() {
  return /** @type{!Array<!proto.pj.sakuchin.percussion.proto.City>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_area_pb.City, 1));
};


/**
 * @param {!Array<!proto.pj.sakuchin.percussion.proto.City>} value
 * @return {!proto.pj.sakuchin.percussion.proto.GetAreaCityResponse} returns this
*/
proto.pj.sakuchin.percussion.proto.GetAreaCityResponse.prototype.setCitiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pj.sakuchin.percussion.proto.City=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pj.sakuchin.percussion.proto.City}
 */
proto.pj.sakuchin.percussion.proto.GetAreaCityResponse.prototype.addCities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pj.sakuchin.percussion.proto.City, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pj.sakuchin.percussion.proto.GetAreaCityResponse} returns this
 */
proto.pj.sakuchin.percussion.proto.GetAreaCityResponse.prototype.clearCitiesList = function() {
  return this.setCitiesList([]);
};


goog.object.extend(exports, proto.pj.sakuchin.percussion.proto);
